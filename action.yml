name: 'AutoMarkdownContents'
description: 'Auto generate markdown contents section'
inputs:
  auto:
    type: boolean
    required: false
    default: false
  file: 
    required: true
    default: "README.md"
  skip-first:
    type: boolean
    required: false
    default: false
  exclude:
    type: list
    separator: '\n'
    defualt: ''
    list-item:
      type: string
runs:
  using: "composite"
  steps:
  - name: Setup Python
    uses: actions/setup-python@v4
    with:
      python-version: '3.8' 
  - name: Install the CLI tool
    run: pip install git+https://github.com/thatrandomperson5/AutoMarkdownContents
    shell: bash
    
  # Arg processing
  # -a
  - run: echo "ARGS=$ARGS -a" >>${GITHUB_ENV}
    shell: bash
    if: ${{ inputs.auto != 'false' }}
  - run: echo "ARGS=$ARGS " >>${GITHUB_ENV}
    shell: bash
    if: ${{ inputs.auto == 'false' }}
  # --skip-first
  - run: echo "ARGS=$ARGS --skip-first" >>${GITHUB_ENV}
    shell: bash
    if: ${{ inputs.skip-first != 'false' }}
  - run: echo "ARGS=$ARGS " >>${GITHUB_ENV}
    shell: bash
    if: ${{ inputs.skip-first == 'false' }}
  # -e
  - run: echo EXCLUDE=$(python -c "$CODE") >>${GITHUB_ENV}
    shell: bash
    env:
      CODE: "import os; import json; print(json.dumps([x.strip() for x in os.getenv('DATA').splitlines()]))"
      DATA:
        ${{ inputs.exclude }}
  - run: echo "ARGS=$ARGS -e $ITEM" >>${GITHUB_ENV}
    shell: bash
    if: ${{ inputs.exclude != '' }}
    env:
      ITEM: ${{ join(fromJSON(env.EXCLUDE), ' -e ') }}
       

  - name: Run main command
    run: python -B -m AutoContentsGen$ARGS $FILE
    shell: bash
    env:
      FILE: ${{ inputs.file }}
      
